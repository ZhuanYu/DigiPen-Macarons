class HUDTutorialFive : ZilchComponent
{
    var Player : Cog = null;
    var TutorialPoint1 : Cog = null;
    var TutorialPoint2 : Cog = null;
    var Vine : Cog = null;
    
    var LevelSettings : Cog = null;

    var BoolCounter : Real = 0;
    
    var IsInstructionsUpdated : Boolean = false;
    var IsReadyToCheckCondition : Boolean = false;
    var InstructionsAppearDelay : Real = 2.0;
    var InstructionsAppearIncrement : Real = 0;
    var DelayDone : Boolean = false;
    
    var IsKeyboardControls : Boolean = true;
    
    [Property]
    var TurnOn : Boolean = true;
    
    var Active : Boolean = true;
    
    constructor() : base()
    {
    }

    function Initialize(init : CogInitializer)
    {
        this.Player = this.Space.FindObjectByName("Player");
        this.TutorialPoint1 = this.Space.FindObjectByName("TutorialPoint1");
        this.TutorialPoint2 = this.Space.FindObjectByName("TutorialPoint2");
        this.Vine = this.Space.FindObjectByName("Vine1");
        
        this.LevelSettings = this.Owner.HUDCreator.HUDSpace.LevelSettings;
        this.LevelSettings.HUDInteractionLogic.SetInstructionsVisibility(false); //Hide instructions text at start
        
        if (this.TurnOn)
        {
            Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        }
    }

    function UpdateReadyState()
    {
        this.IsReadyToCheckCondition = this.LevelSettings.HUDInteractionLogic.IsInactive();
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        //Console.WriteLine(this.IsReadyToCheckCondition);
        
        if(this.Active == false)
        {
            return;
        }
        
        if(this.DelayDone)
        {
            if(this.IsKeyboardControls != this.Player.PlayerMainLogic.IsKeyboardInput)
            {
                this.IsInstructionsUpdated = false;
                this.IsKeyboardControls = this.Player.PlayerMainLogic.IsKeyboardInput;
            }
            
            this.UpdateReadyState();
            
            
            if(this.BoolCounter == 0)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";

                    output = "Pick up the Sunflower.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Owner.InventoryLogic.GetCount() == 1)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 1)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "Move to the right.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.TutorialPoint1.TutorialPoint.PlayerTriggered)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 2)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "[INFO] You can jump and cling onto thorny vines...except the thorns are lethal.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Player.PlayerMainLogic.InputDialog)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 3)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "Place the sunflower down.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Owner.InventoryLogic.GetCount() == 0)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 4)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "Point it at the vine.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Vine.VineLogic.IsBeingBurned)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 5)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "Burn off every single thorn.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Vine.VineLogic.IsFinished)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 6)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "You can now climb on the vine safely. Get across.";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.TutorialPoint2.TutorialPoint.PlayerTriggered)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else if(this.BoolCounter == 7)
            {
                if(this.IsInstructionsUpdated == false)
                { //If instructions are not updated...
                    
                    var output : String = "";
                    
                    output = "[END OF TUTORIAL - Press E to Close]";
                    
                    this.LevelSettings.HUDInteractionLogic.SetInstructionsText(output);
                    
                    this.IsInstructionsUpdated = true;
                }
                else if(this.IsReadyToCheckCondition && this.Player.PlayerMainLogic.InputDialog)
                {
                    this.BoolCounter += 1; //This set of instructions has been completed, move on...
                    this.IsInstructionsUpdated = false; //The instructions displayed are now outdated.
                }
            }
            else
            {
                this.LevelSettings.HUDInteractionLogic.SetActive(false);
                this.Active = false;
                this.LevelSettings.HUDInteractionLogic.ResetCompleteText();
            }
        }
        else
        {
            if(this.InstructionsAppearDelay > this.InstructionsAppearIncrement)
            {
                this.InstructionsAppearIncrement += event.Dt;
            }
            else
            {
                this.DelayDone = true;
            }
        }
    }
}
